(()=>{var e={204:()=>{}},t={};function r(i){var n=t[i];if(void 0!==n)return n.exports;var s=t[i]={exports:{}};return e[i](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var i=t.getElementsByTagName("script");if(i.length)for(var n=i.length-1;n>-1&&!e;)e=i[n--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{"use strict";var e=r(204),t=r.n(e);const i=new class{constructor(){this.widget=document.querySelector(".widget"),this.widgetContainer=this.widget.querySelector(".container"),this.main=this.widget.querySelector("main"),this.containers=null,this.containersP=null}articleTemplate(e="",t="",r='\n  <svg width="50" heigth="50">\n    <rect x = "0" y = "0" width = "50" height = "50" fill = "#a7a7a7"/>\n  </svg>\n  '){return`\n    <div class="wrapper">\n      <h4>${e}</h4>\n      <article>\n        ${r}\n        <p>${t}</p>\n      </article>\n    </div>\n    `}getDOM(){this.containers=this.main.querySelectorAll(".wrapper"),this.containersP=document.querySelectorAll(".wrapper p")}},n=new class{constructor(e){this.gui=e,this.url="https://dimafdr.onrender.com/"}init(){this.showMain(),this.sendXHR(),this.listenServiceWorker()}async sendXHR(){this.gui.getDOM(),this.gui.containers.forEach((e=>e.classList.add("stub")));const e=await fetch(this.url),t=await e.json();this.gui.containers.forEach((e=>e.classList.remove("stub"))),this.gui.main.innerHTML="",t.forEach((e=>{this.gui.main.innerHTML+=this.gui.articleTemplate(e.title,e.description,`<img src="${e.image}">`)}))}listenServiceWorker(){"serviceWorker"in navigator&&navigator.serviceWorker.register("./service.worker.js",{scope:"./"}).then((e=>{console.log(`Registration succeeded. Scope is ${e.scope}`)})).catch((e=>{console.log(`Registration failed with ${e}`)}))}async showFile(e){const r=e.target.files[0],i=await this.readFile(r),n=new(t());n.addEventListener("message",(({data:e})=>{this.gui.result.textContent=e.length,console.log(e),n.terminate()})),n.postMessage(i)}readFile(e){return new Promise(((t,r)=>{const i=new FileReader;i.addEventListener("load",(e=>{t(e.target.result)})),i.addEventListener("error",(e=>{r(e.target.error)})),i.readAsText(e)}))}showMain(){this.gui.main.innerHTML+=this.gui.articleTemplate(),this.gui.main.innerHTML+=this.gui.articleTemplate()}test(){!function(){let e=0;for(let t=0;t<1e9;t+=1)e+=1}()}workerMessages(){}}(i);n.init(),r.p,r.p})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,